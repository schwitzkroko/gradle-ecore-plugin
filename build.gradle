buildscript  {
   repositories {
      // local .m2 folder in user directory
      // mavenLocal()
      maven {
         url gradleRepositoryUrl
      }
      maven {
         url gradleRemoteRepositoryUrl
      }
      // jcenter()
    }
}

plugins {
   id 'java-gradle-plugin'
   id 'groovy'
   id 'eclipse'
   id 'maven-publish' 
   // id 'com.gradle.plugin-publish'
   id 'com.jfrog.bintray' version '1.8.4'
   id 'com.gradle.build-scan' version '2.2.1'
}

wrapper {
   distributionUrl = "https://services.gradle.org/distributions/gradle-5.2.1-all.zip"
}


group 'org.dslab.gradle'
version '1.1.6-SNAPSHOT'

afterEvaluate {
   logger.quiet '------------------------------------------------'
   logger.quiet project.group + ":" + archivesBaseName + ":" + project.version
   logger.quiet '------------------------------------------------'
}


repositories {
   // local .m2 folder in user directory
   // mavenLocal()
   maven {
      url gradleRemoteRepositoryUrl
   }
   // jcenter()
}

dependencies {
   compile 'org.eclipse.emf:org.eclipse.emf.codegen.ecore:2.15.0'
}

//pluginBundle {
//    website = 'https://github.com/ds-lab/gradle-ecore-plugin'
//    vcsUrl = 'https://github.com/ds-lab/gradle-ecore-plugin.git'
//
//    plugins {
//        ecorePlugin {
//            id = 'org.dslab.gradle.ecore'
//            displayName = 'Ecore Code Generation Plugin'
//            description = 'Provides code generation from Eclipse EMF Ecore models and integration with additional dependent Java sources.'
//            tags = ['code generation', 'eclipse', 'emf', 'ecore']
//        }
//    }
//}

gradlePlugin {
   plugins {
      ecorePlugin {
         id = 'org.dslab.gradle.ecore'
         implementationClass ='org.dslab.gradle.ecore.EcorePlugin'

      }
   }
}

task sourcesJar(type: Jar) {
   description = 'generate a jar file with the source code'

   classifier = 'sources'
   from sourceSets.main.allSource
}

publishing {
   publications {
       PluginSetPublication(MavenPublication) {
           from components.java
           
           groupId project.group
           artifactId archivesBaseName
           version '0.0.9' // project.version
           
           // NOTE: list additional artificats here to be able to use the task 'publishToMavenLocal' which is equal to 'install'
           // resolves the artifact tasks
           artifact sourcesJar
           // artifact javadocJar
       }
   }
}

bintray {
   user = System.getProperty('user', 'undefined_user')
   key = System.getProperty('key', 'undefined_key')
   publications = ['PluginSetPublication']
   pkg {
      repo = 'm2'
      name = archivesBaseName
      userOrg = user
      websiteUrl = 'https://github.com/schwitzkroko/gradle-eclipsebuild'
      vcsUrl = 'https://github.com/schwitzkroko/gradle-eclipsebuild.git'
      issueTrackerUrl = 'https://github.com/schwitzkroko/gradle-eclipsebuild/issues'
      licenses = ['Apache-2.0']
      githubRepo = 'schwitzkroko/gradle-eclipsebuild'
      githubReleaseNotesFile = 'README.md'
      version {
         // name = project.version
         desc = 'desc'
         released  = new Date()
         attributes = ['gradle-plugin': 'org.eclipse.buildship.build:gradle-eclipsebuild']
     }
  }
}

eclipse {
   classpath {
      downloadJavadoc = true
      downloadSources = true
   }
}

buildScan {
   termsOfServiceUrl = 'https://gradle.com/terms-of-service'
   termsOfServiceAgree = 'yes'
}